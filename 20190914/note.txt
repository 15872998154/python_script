1.ActionChains(self.browser).move_by_offset(cor_y, cor_x).click().perform()
 	这里是个调用链,注意，brower如果之前定位到某一个元素(例如input),后面的偏移量应该是相对input标签左上角的偏移量,而不再是页面的的左上角(0,0)
 	这一点由于注意，稍不注意,不仅多此一举(获取元素左上角,在加上偏移)，还浪费大量调试。

2.终于搞定验证码，不包含异常情况的处理,其中
	ActionChains(self.browser).move_to_element_with_offset.click(element, cor_x, cor_y)
	这个偏移量是相对于选中元素的左上角进行偏移的
	而 move_by_offset是相对于选中元素的中心位置进行偏移的，所以在这里浪费了大量的时间调试

3.打码平台返回错误打码结果，提交错误给打码平台，此次打码不扣费，这些打码平台真的很良心,2分钱一次，出于测试，即使是返回的正确的打码结果，我也将其标识为错误打码提交给平台，所以，服务商如此良心，故代码真实跑起来，就要加入验证，错误报错给平台，正确进行扣费。这才是君子之道。

4.哈哈，当继续测试，谎报打码错误，平台返回错误率太高。故氪金

5.有时候，打码平台返回的坐标是错误的，这时候就需要判断网页上是否通过了验证。2019年0915日
GeeTest登录页面，刚进入DOM中不存在验证码框节点，当点击验证按钮时，生成一个div节点，弹出滑框或者验证码框，并且display为block,而当我们成功通过验证码时候，这个节点不会消失，但是其
display显示模式none;也就是不显示，则我们可以通过这一点来判断验证码是否通过
